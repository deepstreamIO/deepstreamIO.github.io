"use strict";(self.webpackChunkdeepstreamio_github_io=self.webpackChunkdeepstreamio_github_io||[]).push([[3066],{4345:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var o=r(8168),n=(r(6540),r(5680));const a={title:"Docker Compose",description:"Run deepstream together with a RethinkDB storage provider, a Redis cache provider and a RethinkDB search provider which allows to subscribe to realtime queries.",redirectFrom:["/install/docker-compose/"],logoImage:"compose.png"},i=void 0,s={unversionedId:"tutorials/devops/docker-compose",id:"tutorials/devops/docker-compose",title:"Docker Compose",description:"Run deepstream together with a RethinkDB storage provider, a Redis cache provider and a RethinkDB search provider which allows to subscribe to realtime queries.",source:"@site/docs/00-tutorials/80-devops/10-docker-compose.md",sourceDirName:"00-tutorials/80-devops",slug:"/tutorials/devops/docker-compose",permalink:"/docs/tutorials/devops/docker-compose",editUrl:"https://github.com/deepstreamIO/deepstreamIO.github.io/docs/00-tutorials/80-devops/10-docker-compose.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Docker Compose",description:"Run deepstream together with a RethinkDB storage provider, a Redis cache provider and a RethinkDB search provider which allows to subscribe to realtime queries.",redirectFrom:["/install/docker-compose/"],logoImage:"compose.png"},sidebar:"tutorialSidebar",previous:{title:"Nginx",permalink:"/docs/tutorials/devops/nginx"},next:{title:"Docker Image",permalink:"/docs/tutorials/devops/docker"}},p=[{value:"What is Docker Compose?",id:"what-is-docker-compose",children:[],level:3},{value:"How to use Docker compose with deepstream?",id:"how-to-use-docker-compose-with-deepstream",children:[],level:3}],c={toc:p},l="wrapper";function d(e){let{components:t,...r}=e;return(0,n.yg)(l,(0,o.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"Get more details about Docker in general and about the deepstream standalone Docker in the ",(0,n.yg)("a",{parentName:"p",href:"../install/docker"},"Docker","\xa0","image","\xa0","tutorial")),(0,n.yg)("h3",{id:"what-is-docker-compose"},"What is Docker Compose?"),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"https://docs.docker.com/compose/"},"Compose")," is a tool for defining and running multi-container Docker applications. With Compose, you use a Compose file to configure your application's services. Then, using a single command, you create and start all the services from your configuration."),(0,n.yg)("h3",{id:"how-to-use-docker-compose-with-deepstream"},"How to use Docker compose with deepstream?"),(0,n.yg)("p",null,"Docker compose consumes a YAML file which contains a description of the containers and how there are linked.\nSetup it looks like this:"),(0,n.yg)("p",null,(0,n.yg)("em",{parentName:"p"},"docker-docker.yml"),":"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},'version: \'2\'\nservices:\n    deepstream:\n        image: deepstreamio/deepstream.io\n        ports:\n            - "6020:6020"\n        volumes:\n            - ./conf:/conf\n        depends_on:\n            - redis\n            - rethinkdb\n    deepstream-search-provider:\n        image: deepstreamio/provider-search-rethinkdb\n        environment:\n            - DEEPSTREAM_HOST=deepstream\n            - DEEPSTREAM_PORT=6020\n            - RETHINKDB_HOST=rethinkdb\n        depends_on:\n            - deepstream\n    redis:\n        image: redis:alpine\n        ports:\n            - "6379:6379"\n    rethinkdb:\n        image: rethinkdb\n        ports:\n            - "28015:28015"\n            - "8080:8080"\n        volumes:\n            - ./rethinkdb_data:/data/rethinkdb_data\n')),(0,n.yg)("p",null,"The compose file defines four services:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"deepstream")," - the deepstream server"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"deepstream-search-provider")," - a deepstream client which handles the realtime queries of RethinkDB"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"redis")," - Redis server which is used as both cache and message layer for deepstream"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"rethinkdb")," - RethinkDB as the storage layer for deepstream")),(0,n.yg)("p",null,"The services are accessible to each other via the service name as the hostname. We will need this value in\nthe deepstream configuration later."),(0,n.yg)("p",null,"Explanation of properties of a service:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"image")," URL of the image from the Docker Hub registry"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"ports")," port forwarding of the exposed ports on the container to the port on the host machine"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"volumes")," mount and share the directory from the host machine to the container"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"depends_on")," defines a dependency which affects the starting order of the containers"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"environment")," set environment variables in the container")),(0,n.yg)("p",null,"By default deepstream will not use any connectors for the storage, cache and message layer.\nThis means you need to provide a configuration file and set the options for the connectors.\nThe easiest way to do this is by copying all the files from the ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/deepstreamIO/deepstream.io/tree/master/conf"},"conf/")," directory into your ",(0,n.yg)("em",{parentName:"p"},"conf")," directory next to the compose file."),(0,n.yg)("p",null,"Then change the plugins section to:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},"cache:\n    name: redis\n    options:\n        host: redis\n        port: 6379\n\nstorage:\n    name: rethinkdb\n    options:\n        host: rethinkdb\n        port: 28015\n        splitChar: /\n")),(0,n.yg)("p",null,"Now you can run all containers with just one command:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"docker-compose up\n")),(0,n.yg)("p",null,"If you want to build the deepstream images from the Dockerfiles instead you can checkout\nour ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/deepstreamIO/docker"},"Docker Repository on GitHub")))}d.isMDXComponent=!0},5680:(e,t,r)=>{r.d(t,{xA:()=>l,yg:()=>h});var o=r(6540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=o.createContext({}),c=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(r),u=n,h=d["".concat(p,".").concat(u)]||d[u]||m[u]||a;return r?o.createElement(h,i(i({ref:t},l),{},{components:r})):o.createElement(h,i({ref:t},l))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:n,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);