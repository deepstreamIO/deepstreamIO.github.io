"use strict";(self.webpackChunkdeepstreamio_github_io=self.webpackChunkdeepstreamio_github_io||[]).push([[5906],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2841:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=n(6673),l=["components"],s={title:"Installing on Linux"},u=void 0,c={unversionedId:"tutorials/install/linux",id:"tutorials/install/linux",title:"Installing on Linux",description:"Download the latest server artifact deepstream.io-linux-VERSION.tar.gz and unzip it.",source:"@site/docs/00-tutorials/10-install/10-linux.mdx",sourceDirName:"00-tutorials/10-install",slug:"/tutorials/install/linux",permalink:"/docs/tutorials/install/linux",editUrl:"https://github.com/deepstreamIO/deepstreamIO.github.io/docs/00-tutorials/10-install/10-linux.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"Installing on Linux"},sidebar:"tutorialSidebar",previous:{title:"Getting started with HTTP",permalink:"/docs/tutorials/getting-started/http"},next:{title:"Installing on OSX",permalink:"/docs/tutorials/install/osx"}},p=[{value:"Starting deepstream",id:"starting-deepstream",children:[],level:2},{value:"Install as a service",id:"install-as-a-service",children:[],level:2},{value:"Avoiding Sudo",id:"avoiding-sudo",children:[],level:2}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Download the latest server artifact ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/deepstreamIO/deepstream.io/releases"},"deepstream.io-linux-VERSION.tar.gz")," and unzip it."),(0,i.kt)("h2",{id:"starting-deepstream"},"Starting deepstream"),(0,i.kt)("p",null,"You can start the server by simply running it on the command line"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./deepstream\n")),(0,i.kt)("p",null,"Learn more about deepstream's ",(0,i.kt)("a",{parentName:"p",href:"../../docs/server/command-line-interface"},"command line interface")," and its ",(0,i.kt)("a",{parentName:"p",href:"../../docs/server/configuration"},"configuration file"),"."),(0,i.kt)(o.ZP,{mdxType:"AFewHints"}),(0,i.kt)("h2",{id:"install-as-a-service"},"Install as a service"),(0,i.kt)("p",null,"As of 2.4, deepstream comes with ability to automatically setup and run as a service on machines supporting init.d or systemd."),(0,i.kt)("p",null,"Installing the service is as simple as"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo deepstream service add\n")),(0,i.kt)("p",null,"Which then allows you to start it using the normal service command"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo service deepstream start\n")),(0,i.kt)("p",null,"or through an alias directly via deepstream"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo deepstream service start\n")),(0,i.kt)("p",null,"For those looking to register multiple services (to run multiple deepstreams on one machine) you can do so by specifying the name and providing unique config files"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo deepstream service add --service-name deepstream-6020 -c ~/path1/to/config\nsudo deepstream service add --service-name deepstream-6030 -c ~/path2/to/config\n")),(0,i.kt)("h2",{id:"avoiding-sudo"},"Avoiding Sudo"),(0,i.kt)("p",null,"If you want to make sure the service configuration is set correctly, or if you feel uncomfortable running something under sudo, you can run ",(0,i.kt)("inlineCode",{parentName:"p"},"add")," with the ",(0,i.kt)("inlineCode",{parentName:"p"},"--dry-run")," option to print the service script out for inspection and manual installation."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"deepstream service add --dry-run\n")))}m.isMDXComponent=!0},6673:function(e,t,n){n.d(t,{ZP:function(){return s}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={toc:[{value:"A few hints",id:"a-few-hints",children:[],level:2}]};function s(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"a-few-hints"},"A few hints"),(0,i.kt)("p",null,"deepstream binary comes pre-installed with the following connectors:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"cache redis"),(0,i.kt)("li",{parentName:"ul"},"cache memcached"),(0,i.kt)("li",{parentName:"ul"},"clusternode redis"),(0,i.kt)("li",{parentName:"ul"},"storage rethinkdb"),(0,i.kt)("li",{parentName:"ul"},"storage postgres"),(0,i.kt)("li",{parentName:"ul"},"storage mongodb"),(0,i.kt)("li",{parentName:"ul"},"storage elasticsearch"),(0,i.kt)("li",{parentName:"ul"},"logger winston")),(0,i.kt)("p",null,"deepstream's configuration file can be written in both YAML or JSON. deepstream will automatically choose the right parser, based on the file-extension."),(0,i.kt)("p",null,"Some core configuration options can be overridden via commandline parameters, e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"--host"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"--port")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"--disable-auth"),". For a full list, just run ",(0,i.kt)("inlineCode",{parentName:"p"},"deepstream start --help")),(0,i.kt)("p",null,"The configuration file contains relative paths, e.g. for ./permissions.yml or users.yml. If you run the file from another location, make sure to update them. The paths are relative to the directory the main config file resides in."))}s.isMDXComponent=!0}}]);