"use strict";(self.webpackChunkdeepstreamio_github_io=self.webpackChunkdeepstreamio_github_io||[]).push([[9183],{5680:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>d});var r=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},g=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),c=u(t),m=i,d=c["".concat(l,".").concat(m)]||c[m]||p[m]||o;return t?r.createElement(d,a(a({ref:n},g),{},{components:t})):r.createElement(d,a({ref:n},g))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5859:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=t(8168),i=(t(6540),t(5680));const o={title:"HTTP and Log Monitoring"},a=void 0,s={unversionedId:"tutorials/plugins/monitoring/http-log-monitoring",id:"tutorials/plugins/monitoring/http-log-monitoring",title:"HTTP and Log Monitoring",description:"With most users in production we realized the sweet spot in metrics in the following structure:",source:"@site/docs/00-tutorials/60-plugins/60-monitoring/01-http-log-monitoring.md",sourceDirName:"00-tutorials/60-plugins/60-monitoring",slug:"/tutorials/plugins/monitoring/http-log-monitoring",permalink:"/docs/tutorials/plugins/monitoring/http-log-monitoring",editUrl:"https://github.com/deepstreamIO/deepstreamIO.github.io/docs/00-tutorials/60-plugins/60-monitoring/01-http-log-monitoring.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"HTTP and Log Monitoring"},sidebar:"tutorialSidebar",previous:{title:"Deepstream Monitoring",permalink:"/docs/tutorials/plugins/monitoring/monitoring"},next:{title:"Plugin Introduction",permalink:"/docs/tutorials/custom-plugins/an-overview"}},l=[{value:"So how can I visualise this?",id:"so-how-can-i-visualise-this",children:[],level:4},{value:"Http monitoring",id:"http-monitoring",children:[],level:3},{value:"Log monitoring",id:"log-monitoring",children:[],level:3}],u={toc:l},g="wrapper";function c(e){let{components:n,...t}=e;return(0,i.yg)(g,(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"With most users in production we realized the sweet spot in metrics in the following structure:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "clusterSize": 1,\n  "stateMetrics": {\n    "STATE_REGISTRY": 2,\n    "EVENT_LISTEN_PATTERNS": 0,\n    "EVENT_PUBLISHED_SUBSCRIPTIONS": 0,\n    "RPC_SUBSCRIPTIONS": 1,\n    "RECORD_SUBSCRIPTIONS": 1,\n    "RECORD_LISTEN_PATTERNS": 0,\n    "RECORD_PUBLISHED_SUBSCRIPTIONS": 0,\n    "PRESENCE_SUBSCRIPTIONS": 0,\n    "LOCK": 1\n  },\n  "errors": {\n    "NO_RPC_PROVIDER": 1\n  },\n  "recieved": {\n    "RPC": {\n      "REQUEST": 1,\n      "PROVIDE": 1\n    },\n    "EVENT": {\n      "SUBSCRIBE": 1,\n      "EMIT": 1\n    },\n    "RECORD": {\n      "SUBSCRIBECREATEANDREAD": 1\n    }\n  },\n  "send": {\n    "CONNECTION": {\n      "ACCEPT": 1\n    },\n    "AUTH": {\n      "AUTH_SUCCESSFUL": 1\n    },\n    "RPC": {\n      "NO_RPC_PROVIDER": 1,\n      "PROVIDE": 1\n    },\n    "EVENT": {\n      "SUBSCRIBE": 1\n    },\n    "RECORD": {\n      "SUBSCRIBECREATEANDREAD": 1,\n      "READ_RESPONSE": 1\n    }\n  },\n  "logins": {\n    "websocket": {\n      "allowed": 1,\n      "declined": 0\n    }\n  }\n}\n')),(0,i.yg)("p",null,"This provides us good insight into what the server is actually doing, but doesn't care about the actual subscription names. It's also worth noting that it returns an object with the current state and size of the cluster. This is critical to ensure things are working as expected, essentially making sure all nodes in the cluster are always in the same state."),(0,i.yg)("h4",{id:"so-how-can-i-visualise-this"},"So how can I visualise this?"),(0,i.yg)("p",null,"Usually by using a poll agent like logstash, this takes the json object, transforms it slightly to add some useful meta data and then sends it off to elasticsearch to visualise via Kibana."),(0,i.yg)("p",null,"Deesptream has two prebuilt services for monitoring that can be enabled separately or at the same time:"),(0,i.yg)("h3",{id:"http-monitoring"},"Http monitoring"),(0,i.yg)("p",null,"Enables an endpoint to get the metrics. After the endpoint is called, metrics are reseted.\nAuthentication can be open or setting a ",(0,i.yg)("inlineCode",{parentName:"p"},"key:value")," in the request header."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"monitoring:\n  - type: http\n      # the endpoint url\n      url: /monitoring\n      headerKey: string\n      headerValue: string\n      # for dev purposes in order to skip authentication\n      allowOpenPermissions: false\n\n")),(0,i.yg)("h3",{id:"log-monitoring"},"Log monitoring"),(0,i.yg)("p",null,"Logs the monitoring metrics to be retrieved by a log transport every ",(0,i.yg)("inlineCode",{parentName:"p"},"logInterval")," milliseconds. After the metrics are logged they are reseted."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},"monitoring:\n  - type: log\n      # milliseconds\n      logInterval: number\n      # log key for metrics, defaults to 'DEEPSTREAM_MONITORING'\n      monitoringKey: string\n")))}c.isMDXComponent=!0}}]);