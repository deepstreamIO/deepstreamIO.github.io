"use strict";(self.webpackChunkdeepstreamio_github_io=self.webpackChunkdeepstreamio_github_io||[]).push([[173],{1359:(e,r,n)=>{n.r(r),n.d(r,{contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=n(8168),t=(n(6540),n(5680));const l={title:"Valve Permissions",description:"The API for Valve, deepstream's powerful permissioning mechanism"},i=void 0,o={unversionedId:"docs/server/valve-permissions",id:"docs/server/valve-permissions",title:"Valve Permissions",description:"The API for Valve, deepstream's powerful permissioning mechanism",source:"@site/docs/10-docs/10-server/50-valve-permissions.md",sourceDirName:"10-docs/10-server",slug:"/docs/server/valve-permissions",permalink:"/docs/docs/server/valve-permissions",editUrl:"https://github.com/deepstreamIO/deepstreamIO.github.io/docs/10-docs/10-server/50-valve-permissions.md",tags:[],version:"current",sidebarPosition:50,frontMatter:{title:"Valve Permissions",description:"The API for Valve, deepstream's powerful permissioning mechanism"},sidebar:"tutorialSidebar",previous:{title:"User File",permalink:"/docs/docs/server/user-file"},next:{title:"Javascript Client",permalink:"/docs/docs/client-js/client"}},s=[{value:"Rule Types",id:"rule-types",children:[{value:"record",id:"record",children:[],level:3},{value:"event",id:"event",children:[],level:3},{value:"rpc",id:"rpc",children:[],level:3},{value:"presence",id:"presence",children:[],level:3}],level:2},{value:"Variables",id:"variables",children:[{value:"user",id:"user",children:[],level:3},{value:"data",id:"data",children:[],level:3},{value:"oldData",id:"olddata",children:[],level:3},{value:"now",id:"now",children:[],level:3},{value:"action",id:"action",children:[],level:3},{value:"$variableName",id:"variablename",children:[],level:3}],level:2},{value:"Cross reference",id:"cross-reference",children:[{value:"_(recordName)",id:"_recordname",children:[],level:3}],level:2},{value:"String functions",id:"string-functions",children:[],level:2}],p={toc:s},d="wrapper";function c(e){let{components:r,...n}=e;return(0,t.yg)(d,(0,a.A)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,t.yg)("p",null,"The API for Valve, deepstream's powerful permissioning mechanism."),(0,t.yg)("h2",{id:"rule-types"},"Rule Types"),(0,t.yg)("p",null,"You can specify permission rules for the following interactions"),(0,t.yg)("h3",{id:"record"},"record"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"create")," triggered when a record is requested for the first time"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"write")," operations that change a record's data. (PATCH & UPDATE)"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"read")," reading a record's data"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"delete")," deleting a record"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"listen")," listen for other clients subscribing to a record"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"notify")," whether or not the client can notify of records updated directly in database")),(0,t.yg)("h3",{id:"event"},"event"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"publish")," sending events"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"subscribe")," subscribing for events"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"listen")," listen for other clients subscribing to events")),(0,t.yg)("h3",{id:"rpc"},"rpc"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"provide")," registering a client as a RPC provider"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"request")," making a remote procedure call")),(0,t.yg)("h3",{id:"presence"},"presence"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"allow")," query for connected authenticated clients")),(0,t.yg)("h2",{id:"variables"},"Variables"),(0,t.yg)("p",null,"These variables are available for use within a permission rule"),(0,t.yg)("h3",{id:"user"},"user"),(0,t.yg)("p",null,"the authentication data for the user attempting the read or write, containing the following keys:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-javascript"},"{\n    //Boolean, false if id === 'open'\n    isAuthenticated: true, //Boolean\n    //the userId / username as returned by auth the auth provider\n    id: 'johndoe', //String\n    //optional object, containing fields like e.g. role, access level etc\n    //returned by auth provider\n    data: { role: 'admin' } //Object\n}\n")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Usage Example:")," write to record ",(0,t.yg)("inlineCode",{parentName:"p"},"user-profile")," is only allowed for owner"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},'record:\n  user-profile/$username:\n    write: "user.id === $username"\n')),(0,t.yg)("h3",{id:"data"},"data"),(0,t.yg)("p",null,"the incoming data for records, events and rpcs"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Usage Example:")," only allow publishing of event if it has more than 50 likes"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},'event:\n  facebook-news:\n    publish: "data.likes > 50"\n')),(0,t.yg)("h3",{id:"olddata"},"oldData"),(0,t.yg)("p",null,"the current data, only for records"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Usage Example:")," Only allow bids higher than the current price"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},'record:\n  item/*:\n    write: "data.bid > oldData.bid"\n')),(0,t.yg)("h3",{id:"now"},"now"),(0,t.yg)("p",null,"current timestamp on the server in ms"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Usage Example:")," Only allow scheduling appointments in the future"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},'rpc:\n  schedule-appointment:\n    request: "data.desiredDate > now"\n')),(0,t.yg)("h3",{id:"action"},"action"),(0,t.yg)("p",null,"the original action that triggered this rule (e.g. UPDATE / PATCH / LISTEN ) etc. Useful for more finegrained/low-level permissions. You can find a list of all available actions ",(0,t.yg)("a",{parentName:"p",href:"../common/constants"},"here")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Usage Example:")," Only allow patch updates"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},"record:\n  user-profile/:\n    write: \"data.action === 'PATCH'\"\n")),(0,t.yg)("h3",{id:"variablename"},"$variableName"),(0,t.yg)("p",null,"Variables that are extruded from the record / event / rpc name. Names can contain multiple variables. Variable names start with a dollar and are only allowed to contain uppercase letters, lowercase letters and numbers."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Usage Examples:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},'record:\n  user-profile/$userId:\n    # make sure users can only manipulate their own profile\n    write: "$userId === user.id"\nevent:\n  # Make sure the headline for `pet-news/pugs` contains the word pug\n  pet-news/$pet:\n    publish: "data.headline.indexOf( $pet ) !== -1"\n\n')),(0,t.yg)("h2",{id:"cross-reference"},"Cross reference"),(0,t.yg)("h3",{id:"_recordname"},"_(recordName)"),(0,t.yg)("p",null,"Only for records. Cross-references another record and makes the other record's data available for the permission rule."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Usage Example:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},'record:\n  car-sale/$transactionId:\n    # when booking a new car sale, make sure that\n    # the car that\'s sold exists and that its price\n    # is the same or lower than what the customer is charged\n    write: "_(data.carId) !== null && _(data.carId).price >= data.price"\n\n')),(0,t.yg)("h2",{id:"string-functions"},"String functions"),(0,t.yg)("p",null,"Valve supports the following string functions"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"startsWith")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"endsWith")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"indexOf")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"match")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"toUpperCase")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"toLowerCase")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"trim"))),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Usage Example:")," make sure a postcode only contains numbers"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-yaml"},'record:\n    address/*:\n      write: "data.postcode && data.postcode.match( /^[0-9]*$/ )"\n')))}c.isMDXComponent=!0},5680:(e,r,n)=>{n.d(r,{xA:()=>d,yg:()=>m});var a=n(6540);function t(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function l(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?l(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function o(e,r){if(null==e)return{};var n,a,t=function(e,r){if(null==e)return{};var n,a,t={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],r.indexOf(n)>=0||(t[n]=e[n]);return t}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var s=a.createContext({}),p=function(e){var r=a.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},d=function(e){var r=p(e.components);return a.createElement(s.Provider,{value:r},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},g=a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(n),g=t,m=c["".concat(s,".").concat(g)]||c[g]||u[g]||l;return n?a.createElement(m,i(i({ref:r},d),{},{components:n})):a.createElement(m,i({ref:r},d))}));function m(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var l=n.length,i=new Array(l);i[0]=g;var o={};for(var s in r)hasOwnProperty.call(r,s)&&(o[s]=r[s]);o.originalType=e,o[c]="string"==typeof e?e:t,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"}}]);