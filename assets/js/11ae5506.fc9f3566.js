"use strict";(self.webpackChunkdeepstreamio_github_io=self.webpackChunkdeepstreamio_github_io||[]).push([[7299],{4472:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=n(8168),r=(n(6540),n(5680));const i={title:"Security Overview"},o=void 0,s={unversionedId:"tutorials/concepts/security",id:"tutorials/concepts/security",title:"Security Overview",description:"Security in deepstream is based on three interrelated concepts:",source:"@site/docs/00-tutorials/00-concepts/30-security.md",sourceDirName:"00-tutorials/00-concepts",slug:"/tutorials/concepts/security",permalink:"/docs/tutorials/concepts/security",editUrl:"https://github.com/deepstreamIO/deepstreamIO.github.io/docs/00-tutorials/00-concepts/30-security.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{title:"Security Overview"},sidebar:"tutorialSidebar",previous:{title:"Connectivity",permalink:"/docs/tutorials/concepts/connectivity"},next:{title:"Modelling relational data",permalink:"/docs/tutorials/concepts/modelling-relational-data"}},l=[{value:"Encrypted Connections",id:"encrypted-connections",children:[],level:2},{value:"Authentication",id:"authentication",children:[{value:"Authentication FAQ",id:"authentication-faq",children:[],level:3}],level:2},{value:"Permissioning",id:"permissioning",children:[],level:2}],c={toc:l},u="wrapper";function p(e){let{components:t,...n}=e;return(0,r.yg)(u,(0,a.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Security in deepstream is based on three interrelated concepts:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"encrypted connections"),(0,r.yg)("li",{parentName:"ul"},"user authentication"),(0,r.yg)("li",{parentName:"ul"},"granular permissions")),(0,r.yg)("p",null,"Here's how they work together:"),(0,r.yg)("h2",{id:"encrypted-connections"},"Encrypted Connections"),(0,r.yg)("p",null,"deepstream supports transport layer security for web-facing connections using HTTPS and WSS. To setup SSL on deepstream, you need to provide the following configuration keys:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"ssl:\n  key: fileLoad(./my-key.key)\n  cert: fileLoad(./my-key.key)\n")),(0,r.yg)("p",null,"It's highly recommended to always use a seperate process to do SSL termination. Usually via a load balancer (e.g. Nginx or HA Proxy). To learn more about this, head over to the ",(0,r.yg)("a",{parentName:"p",href:"../devops/nginx"},"Nginx Tutorial"),"."),(0,r.yg)("h2",{id:"authentication"},"Authentication"),(0,r.yg)("p",null,"Every incoming connection needs to pass an authentication step. This happens when the client calls ",(0,r.yg)("inlineCode",{parentName:"p"},"login(data, callback)"),".\ndeepstream comes with three built-in authentication mechanisms:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/docs/tutorials/core/auth/none"},"none")," allows every connection. Choose this option for public sites that don't require access controls."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/docs/tutorials/core/auth/file"},"file")," reads authentication data from a static file. This is a good choice for public read / private write use cases, e.g. sports result pages that let every user visit, but only a few backend processes update the result."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/docs/tutorials/core/auth/storage"},"storage")," authentication allows you to store usernames, password hashes and optional meta-data in a table within your database that will be used to authenticate incoming connections."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/docs/tutorials/core/auth/http-webhook"},"http")," contacts a configurable HTTP webhook to ask if a user is allowed to connect. This is the most flexible option as it allows you to write a tiny http server in any language that can connect to databases, active directories, oAuth providers or whatever else your heart desires. http auth can be combined with ",(0,r.yg)("a",{parentName:"li",href:"/docs/tutorials/core/auth/jwt-auth/"},"jwt"),".")),(0,r.yg)("p",null,"Apart from just accepting / denying incoming connections, the authentication step can also provide two extra bits of information:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"clientData")," is returned to the client upon login. This is useful to provide user specific settings upon login, e.g. ",(0,r.yg)("inlineCode",{parentName:"li"},'{ "view": "author" }')," for a blog"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"serverData")," is kept privately on the server and passed to the permission handler whenever a client performs an action. This makes certain security concepts possible, e.g. role based authentication.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'"system-settings": {\n    //publicly readable\n    "read": true,\n    //writable only by admin\n    "write": "user.data.role === \'admin\'"\n}\n')),(0,r.yg)("h3",{id:"authentication-faq"},"Authentication FAQ"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"When exactly does authentication happen?")," When a deepstream client is created, it establishes a connection straight away. The connection however remains in a quarantine state until ",(0,r.yg)("inlineCode",{parentName:"li"},"login()")," is called. This makes sure that auth-data is sent over an encrypted connection and helps to get the at times time-consuming connection establishment out of the way while the user is busy typing passwords."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Can I read usernames for auth purposes out of a deepstream record?"),"\nThere's no built-in support for this at the moment, but it's easy to use the http auth-type and write a server that reads from the same database or cache deepstream connects to."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Can a user connect more than once at the same time"),"\nYes. The same user can connect multiple times from separate browser windows or devices.")),(0,r.yg)("h2",{id:"permissioning"},"Permissioning"),(0,r.yg)("p",null,"Permissioning is the act of deciding whether a specific action, e.g. writing to a record or subscribing to an event is allowed.\nTo help with this, deepstream uses an expressive, JSON-based permissioning\nlanguage called Valve. There's a lot to say about Valve. Here's a small Valve\nFile that should give you a first impression, to learn more though head over to\nthe ",(0,r.yg)("a",{parentName:"p",href:"/docs/tutorials/core/permission/valve-introduction/"},"permissioning tutorial")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'record:\n\n  "*":\n    create: true\n    delete: true\n    write: true\n    read: true\n    listen: true\n\n  public-read-private-write/$userid:\n    read: true\n    create: "user.id === $userid"\n    write: "user.id === $userid"\n\n  only-increment:\n    write: "!oldData.value || data.value > oldData.value"\n    create: true\n    read: true\n\n  only-delete-egon-miller/$firstname/$lastname:\n    delete: "$firstname.toLowerCase() === \'egon\' && $lastname.toLowerCase() === \'miller\'"\n\n  only-allows-purchase-of-products-in-stock/$purchaseId:\n    create: true\n    write: "_(\'item/\' + data.itemId ).stock > 0"\n\nevent:\n\n  "*":\n    listen: true\n    publish: true\n    subscribe: true\n\n  open/"*":\n    listen: true\n    publish: true\n    subscribe: true\n\n  forbidden/"*":\n    publish: false\n    subscribe: false\n\n  a-to-b/"*":\n    publish: "user.id === \'client-a\'"\n    subscribe: "user.id === \'client-b\'"\n\n  news/$topic:\n    publish: "$topic === \'tea-cup-pigs\'"\n\n  number:\n    publish: "typeof data === \'number\' && data > 10"\n\n  place/$city:\n    publish: "$city.toLowerCase() === data.address.city.toLowerCase()"\n\nrpc:\n\n  "*":\n    provide: true\n    request: true\n\n  a-provide-b-request:\n    provide: "user.id === \'client-a\'"\n    request: "user.id === \'client-b\'"\n\n  only-full-user-data:\n    request: "typeof data.firstname === \'string\' && typeof data.lastname === \'string\'"\n')))}p.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>y});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),h=r,y=p["".concat(l,".").concat(h)]||p[h]||d[h]||i;return n?a.createElement(y,o(o({ref:t},u),{},{components:n})):a.createElement(y,o({ref:t},u))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);