"use strict";(self.webpackChunkdeepstreamio_github_io=self.webpackChunkdeepstreamio_github_io||[]).push([[4527],{5680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>m});var o=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),l=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=l(e.components);return o.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},g=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),g=r,m=u["".concat(s,".").concat(g)]||u[g]||d[g]||i;return t?o.createElement(m,a(a({ref:n},p),{},{components:t})):o.createElement(m,a({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=g;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[u]="string"==typeof e?e:r,a[1]=c;for(var l=2;l<i;l++)a[l]=t[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}g.displayName="MDXCreateElement"},7920:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var o=t(8168),r=(t(6540),t(5680));const i={title:"JSON Endpoint",description:"Learn how to configure a JSON based  Websocket Endpoint",wip:!0,logoImage:"json.png"},a=void 0,c={unversionedId:"tutorials/plugins/connection-endpoint/websocket-json",id:"tutorials/plugins/connection-endpoint/websocket-json",title:"JSON Endpoint",description:"Learn how to configure a JSON based  Websocket Endpoint",source:"@site/docs/00-tutorials/60-plugins/40-connection-endpoint/02-websocket-json.md",sourceDirName:"00-tutorials/60-plugins/40-connection-endpoint",slug:"/tutorials/plugins/connection-endpoint/websocket-json",permalink:"/docs/tutorials/plugins/connection-endpoint/websocket-json",editUrl:"https://github.com/deepstreamIO/deepstreamIO.github.io/docs/00-tutorials/60-plugins/40-connection-endpoint/02-websocket-json.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"JSON Endpoint",description:"Learn how to configure a JSON based  Websocket Endpoint",wip:!0,logoImage:"json.png"},sidebar:"tutorialSidebar",previous:{title:"Binary WebSocket Endpoint",permalink:"/docs/tutorials/plugins/connection-endpoint/websocket-binary"},next:{title:"V3 Text Protocol",permalink:"/docs/tutorials/plugins/connection-endpoint/websocket-v3"}},s=[{value:"How to configure:",id:"how-to-configure",children:[{value:"server",id:"server",children:[],level:4},{value:"client",id:"client",children:[],level:4}],level:3}],l={toc:s},p="wrapper";function u(e){let{components:n,...t}=e;return(0,r.yg)(p,(0,o.A)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"The JSON endpoint is available to help people to debug writing new SDKs and should not be used in production."),(0,r.yg)("h3",{id:"how-to-configure"},"How to configure:"),(0,r.yg)("h4",{id:"server"},"server"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"connectionEndpoints:\n  - type: ws-json\n    options:\n      # url path websocket connections connect to\n      urlPath: /deepstream-json\n      # the amount of milliseconds between each ping/heartbeat message\n      heartbeatInterval: 30000\n      # the amount of milliseconds that writes to sockets are buffered\n      outgoingBufferTimeout: 10\n      # the maximum amount of bytes to buffer before flushing, stops the client from large enough packages\n      # to block its responsiveness\n      maxBufferByteSize: 100000\n      # Security\n      # amount of time a connection can remain open while not being logged in\n      unauthenticatedClientTimeout: 180000\n      # invalid login attempts before the connection is cut\n      maxAuthAttempts: 3\n      # maximum allowed size of an individual message in bytes\n      maxMessageSize: 1048576\n      # optional required headers\n      headers: []\n\n")),(0,r.yg)("h4",{id:"client"},"client"),(0,r.yg)("p",null,"In the client options include:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"socketOptions: {\n  jsonTransportMode: true\n}\n")))}u.isMDXComponent=!0}}]);